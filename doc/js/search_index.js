var search_data = {"index":{"searchIndex":["ccwc","compute()","format_output()","get_byte_count()","get_character_count()","get_line_count()","get_word_count()","new()","no_options?()","parse()","show_total?()","valid_option?()"],"longSearchIndex":["ccwc","ccwc#compute()","ccwc#format_output()","ccwc#get_byte_count()","ccwc#get_character_count()","ccwc#get_line_count()","ccwc#get_word_count()","ccwc::new()","ccwc#no_options?()","ccwc#parse()","ccwc#show_total?()","ccwc#valid_option?()"],"info":[["CCWC","","CCWC.html","","<p>CCWC (Crickett Coding Word Count) - A simplified version of the Linux ‘wc` command-line utility.\n<p>This …\n"],["compute","CCWC","CCWC.html#method-i-compute","()","<p>Computes the line, word, byte, and character counts for each file based on the options passed.\n<p>If no options …\n"],["format_output","CCWC","CCWC.html#method-i-format_output","(*args)","<p>Formats the output based on the options passed.\n<p>@param [Integer, nil] line_count The line count for the …\n"],["get_byte_count","CCWC","CCWC.html#method-i-get_byte_count","(file)","<p>Returns the byte count of the specified file.\n<p>@param [String] file The file path. @return [Integer] The …\n"],["get_character_count","CCWC","CCWC.html#method-i-get_character_count","(file)","<p>Returns the character count of the specified file.\n<p>@param [String] file The file path. @return [Integer] …\n"],["get_line_count","CCWC","CCWC.html#method-i-get_line_count","(file)","<p>Returns the line count of the specified file.\n<p>@param [String] file The file path. @return [Integer] The …\n"],["get_word_count","CCWC","CCWC.html#method-i-get_word_count","(file)","<p>Returns the word count of the specified file.\n<p>@param [String] file The file path. @return [Integer] The …\n"],["new","CCWC","CCWC.html#method-c-new","(args)","<p>Initializes the CCWC object and parses the command-line arguments.\n<p>@param [Array&lt;String&gt;] args  …\n"],["no_options?","CCWC","CCWC.html#method-i-no_options-3F","()","<p>Checks if no options were provided by the user.\n<p>If no options are provided, it defaults to counting lines, …\n"],["parse","CCWC","CCWC.html#method-i-parse","(args)","<p>Parses the command-line arguments to extract options and file paths.\n<p>@param [Array&lt;String&gt;] args …\n"],["show_total?","CCWC","CCWC.html#method-i-show_total-3F","()","<p>Displays the total counts (line, word, and byte) if more than one file is processed.\n<p>This method will …\n"],["valid_option?","CCWC","CCWC.html#method-i-valid_option-3F","(option)","<p>Validates the option passed as an argument.\n<p>@param [String] option The option (e.g., “-l” for …\n"]]}}